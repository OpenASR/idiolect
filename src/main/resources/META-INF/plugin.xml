<idea-plugin>
    <id>org.openasr.idiolect</id>
    <name>idiolect</name>
    <vendor email="bre@ndan.co" url="https://github.com/OpenASR/idiolect">OpenASR</vendor>

    <description>
        <![CDATA[Speech recognition for IntelliJ IDEA. Idiolect listens to voice commands
        and assists with simple actions like debugging, navigation, and refactoring. For
        a list of example phrases, please see the
        <a href="https://github.com/OpenASR/idiolect/blob/feature/grammar-system/docs/example-phrases.md">documentation</a>.]]>
    </description>

    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-pronouncer.xml">com.intellij.modules.java</depends>
<!--    <depends>AceJump</depends>-->

    <applicationListeners>
        <listener topic="org.openasr.idiolect.nlp.NlpResultListener" class="org.openasr.idiolect.nlp.IntellijNlpResultListener"/>
        <listener topic="org.openasr.idiolect.nlp.NlpResultListener" class="org.openasr.idiolect.nlp.LoggingNlpResultListener"/>
    </applicationListeners>

    <extensionPoints>
        <extensionPoint name="actionRecognizer" interface="org.openasr.idiolect.actions.recognition.ActionRecognizer" dynamic="true"/>
        <extensionPoint name="asrSystem" interface="org.openasr.idiolect.asr.AsrSystem" dynamic="true"/>
        <extensionPoint name="asrProvider" interface="org.openasr.idiolect.asr.AsrProvider" dynamic="true"/>
        <extensionPoint name="ttsProvider" interface="org.openasr.idiolect.tts.TtsProvider" dynamic="true"/>
        <extensionPoint name="nlpProvider" interface="org.openasr.idiolect.nlp.NlpProvider" dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="org.openasr.idiolect.settings.IdiolectConfig"/>
        <applicationService serviceImplementation="org.openasr.idiolect.asr.vosk.VoskConfig"/>
        <applicationConfigurable groupId="tools" displayName="Idiolect"
                                 id="preferences.IdiolectConfiguration"
                                 instance="org.openasr.idiolect.settings.IdiolectConfigurable" dynamic="true"/>
        <applicationConfigurable groupId="tools" displayName="Vosk"
                                 id="preferences.VoskConfiguration"
                                 parentId="preferences.IdiolectConfiguration"
                                 instance="org.openasr.idiolect.asr.vosk.VoskConfigurable" dynamic="true"/>

        <notificationGroup id="Idiolect" displayType="BALLOON"/>
        <statusBarWidgetFactory implementation="org.openasr.idiolect.presentation.RecognitionStatusBarWidgetFactory"/>
    </extensions>

    <extensions defaultExtensionNs="org.openasr.idiolect">
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.IdiolectActionRecognizer" order="first"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.CustomUtteranceActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.ExtractActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.FindUsagesActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.RenameActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.SurroundWithNoNullCheckRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.JavaActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.RegisteredEditorActionRecognizer"
                          order="before RegisteredActionRecognizer"/>
        <actionRecognizer implementation="org.openasr.idiolect.actions.recognition.RegisteredActionRecognizer"
                          id="RegisteredActionRecognizer"
                          order="last"/>

        <asrSystem implementation="org.openasr.idiolect.asr.AsrControlLoop"/>
        <asrProvider implementation="org.openasr.idiolect.asr.vosk.VoskAsr"/>
        <ttsProvider implementation="org.openasr.idiolect.tts.IdiolectTTS"/>
        <nlpProvider implementation="org.openasr.idiolect.nlp.PatternBasedNlpProvider"/>
    </extensions>

    <actions>
        <action id="Idiolect.VoiceAction" text="Invoke by voice-command"
                class="org.openasr.idiolect.actions.ExecuteVoiceCommandAction"/>
    </actions>
</idea-plugin>
