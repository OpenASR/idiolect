name: Deploy

on:
  push:
    branches: [ master ]
#    paths:
#      - '**.kt'
#      - '**.kts'
#      - '**.tidy'
  pull_request:
    branches: [ master ]

jobs:
  # Needed until Vosk provide a new release to fix Windows issues
  vosk-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout OpenBLAS
        uses: actions/checkout@v3
        with:
          repository: xianyi/OpenBLAS
          path: kaldi/tools/OpenBLAS
          ref: v0.3.20
      - name: Build OpenBLAS
        run: |
          cd kaldi/tools
          apt update && apt install -y devtoolset-8-libatomic-devel automake autoconf libtool cmake libffi-devel
          make -C OpenBLAS ONLY_CBLAS=1 DYNAMIC_ARCH=1 TARGET=NEHALEM USE_LOCKING=1 USE_THREAD=0 all 
          make -C OpenBLAS PREFIX=$GITHUB_WORKSPACE/kaldi/tools/OpenBLAS/install install

      - name: Checkout clapack
        uses: actions/checkout@v3
        with:
          repository: alphacep/clapack
          path: kaldi/tools/clapack
          ref: v3.2.1
      - name: Build OpenBLAS
        run: |
          cd kaldi/tools/
          mkdir -p clapack/BUILD && cd clapack/BUILD && cmake .. && make -j 10 && find . -name "*.a" | xargs cp -t ../../OpenBLAS/install/lib

      - name: Checkout openfst
        uses: actions/checkout@v3
        with:
          repository: alphacep/openfst
          path: kaldi/tools/openfst
      - name: Build openfst
        run: |
          autoreconf -i
          CFLAGS="-g -O3" ./configure --prefix=$GITHUB_WORKSPACE/kaldi/tools/openfst --enable-static --enable-shared --enable-far --enable-ngram-fsts --enable-lookahead-fsts --with-pic --disable-bin
          make -j 10 && make install

      - name: Checkout kaldi
        uses: actions/checkout@v3
        with:
          repository: alphacep/kaldi
          path: kaldi
      - name: Build kaldi
        run: |         
          cd $GITHUB_WORKSPACE/kaldi/src
          ./configure --mathlib=OPENBLAS_CLAPACK --shared --use-cuda=no
          sed -i 's:-msse -msse2:-msse -msse2:g' kaldi.mk
          sed -i 's: -O1 : -O3 :g' kaldi.mk
          make -j $(nproc) online2 lm rnnlm
          find $GITHUB_WORKSPACE/kaldi -name "*.o" -exec rm {}      


  # Needed until Vosk provide a new release to fix Windows issues
      - name: Checkout vosk-api
        uses: actions/checkout@v3
        with:
          repository: alphacep/vosk-api
          ref: fff40ce1a1f1b921272a184acfd0c21350750789
          path: vosk-api
      - name: Build vosk-api linux
        run: |
          cd vosk-api/src
          KALDI_ROOT=$GITHUB_WORKSPACE/kaldi OPENFST_ROOT=$GITHUB_WORKSPACE/kaldi/tools/openfst OPENBLAS_ROOT=$GITHUB_WORKSPACE/kaldi/tools/OpenBLAS/install make
          mkdir -p $GITHUB_WORKSPACE/vosk-linux-x86_64
      - uses: actions/upload-artifact@v3
        with:
          name: vosk-linux-x86_64
          path: |
            vosk-api/src/*.so
            vosk-api/src/vosk_api.h

  vosk-win64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout openfst
        uses: actions/checkout@v3
        with:
          repository: alphacep/openfst
          path: openfst
      - name: Build openfst
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ca-certificates g++ bzip2 unzip make wget zlib1g-dev patch cmake xz-utils automake autoconf libtool pkg-config g++-mingw-w64-i686 g++-mingw-w64-x86-64
          mkdir kaldi          
          cd openfst
          autoreconf -i
          CXX=x86_64-w64-mingw32-g++-posix CXXFLAGS="-O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING" ./configure --prefix=$GITHUB_WORKSPACE/kaldi/local --enable-shared --enable-static --with-pic --disable-bin --enable-lookahead-fsts --enable-ngram-fsts --host=x86_64-w64-mingw32
          make && make install

      - name: Checkout OpenBLAS
        uses: actions/checkout@v3
        with:
          repository: xianyi/OpenBLAS
          path: kaldi/OpenBLAS
          ref: v0.3.20
      - name: Build OpenBLAS
        run: |
          cd kaldi/OpenBLAS
          make HOSTCC=gcc BINARY=64 CC=x86_64-w64-mingw32-gcc ONLY_CBLAS=1 DYNAMIC_ARCH=1 TARGET=NEHALEM USE_LOCKING=1 USE_THREAD=0
          make PREFIX=$GITHUB_WORKSPACE/kaldi/local install

      - name: Checkout clapack
        uses: actions/checkout@v3
        with:
          repository: alphacep/clapack
          path: kaldi/clapack
          ref: v3.2.1
      - name: Build OpenBLAS
        run: |
          cd kaldi/
          mkdir -p clapack/BUILD && cd clapack/BUILD
          cmake -DCMAKE_C_COMPILER_TARGET=x86_64-w64-mingw32 -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc-posix -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_CROSSCOMPILING=True ..
          make -C F2CLIBS/libf2c
          make -C BLAS
          make -C SRC
          find . -name *.a -exec cp {} $GITHUB_WORKSPACE/kaldi/local/lib

      - name: Checkout kaldi
        uses: actions/checkout@v3
        with:
          repository: alphacep/kaldi
          path: kaldi
          # https://github.com/alphacep/vosk-api/blob/master/travis/Dockerfile.win ?!!
          ref: vosk-android
      - name: Build kaldi
        run: |
          cd $GITHUB_WORKSPACE/kaldi/src
          CXX=x86_64-w64-mingw32-g++-posix CXXFLAGS="-O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING" ./configure --shared --mingw=yes --use-cuda=no --mathlib=OPENBLAS_CLAPACK  --host=x86_64-w64-mingw32 --openblas-clapack-root=$GITHUB_WORKSPACE/kaldi/local --fst-root=$GITHUB_WORKSPACE/kaldi/local --fst-version=1.8.0 \
          make depend -j
          make online2 lm rnnlm

      - name: Checkout vosk-api
        uses: actions/checkout@v3
        with:
          repository: alphacep/vosk-api
          ref: fff40ce1a1f1b921272a184acfd0c21350750789
          path: vosk-api
      - name: Build vosk-api windows
        run: |
          cd vosk-api/src
          KALDI_ROOT=$GITHUB_WORKSPACE/kaldi OPENFST_ROOT=$GITHUB_WORKSPACE/kaldi/openfst OPENBLAS_ROOT=$GITHUB_WORKSPACE/kaldi/OpenBLAS/install make

      - uses: actions/upload-artifact@v3
        with:
          name: vosk-win64
          path: |
            $GITHUB_WORKSPACE/vosk-api/src/*.dll 
            $GITHUB_WORKSPACE/vosk-api/src/vosk_api.h

  vosk-api:
    needs: [vosk-linux-x86_64, vosk-win64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout vosk-api
        uses: actions/checkout@v3
        with:
          repository: alphacep/vosk-api
          ref: fff40ce1a1f1b921272a184acfd0c21350750789
          path: vosk-api
      - uses: actions/download-artifact@v3
        with:
          path: vosk-api/java/lib/src/main/resources

  build-idea:
    needs: [vosk-api]
    runs-on: ubuntu-latest

    steps:
      # Build idear
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Gradle
        run: |
          ./gradlew test buildPlugin --stacktrace